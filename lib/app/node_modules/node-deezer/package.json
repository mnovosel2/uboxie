{
  "name": "node-deezer",
  "version": "0.3.3",
  "description": "Unofficial Node.js wrapper for the Deezer API",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikermcneil/node-deezer.git"
  },
  "keywords": [
    "deezer",
    "api",
    "audio"
  ],
  "author": {
    "name": "Mike McNeil"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "3dbcd0587361844b0f10d4974872d392e14fb416",
  "dependencies": {
    "request": "~2.27.0",
    "lodash": "~1.3.1"
  },
  "devDependencies": {
    "validator": "~1.5.1"
  },
  "readme": "node-deezer\n===========\n\nUnofficial Node.js wrapper for the Deezer API\n\n## Installation\nFirst, install the npm module:\n`npm install node-deezer`\n\n## Hello Deezer\n\nHere's a quick example to get you started:\n\n> For more, clone this repo and try out the [Express example](https://github.com/mikermcneil/node-deezer/tree/master/examples/with_express).\n\n```javascript\n// Instantiate library (can be global or instantiated in separate places-- either way is fine)\nvar DZ = require('node-deezer');\nvar deezer = new DZ();\n\n// Now use node-deezer to generate the the link where you can redirect\n// your users to allow your app to access her/his Deezer account\nvar appId = '28325'; // from developers.deezer.com\nvar redirectUrl = 'http://localhost:3000/deezerCallback'; // somewhere in your app, see below\nvar loginUrl = deezer.getLoginUrl(appId, redirectUrl);\n\n// ...\n// ...\n// ...\n// When the user has approved your app, they're sent to the redirectUrl above\n// which you might handle like so:\n\n// `code` should have been handed back by Deezer as a parameter\n// if it was not, an error occurred, and we must handle it here\nvar code = req.param('code');\n\nif (!code) {\n  // Handle an error if one happened (see express example for more on this)\n  // we'll gloss over it here\n  var err = req.param('error_reason');\n\n  // Since we have this code, we can trust that the user \n  // actually meant to grant us access to their account.\n\t\n  // Now we need to combine this code with our app credentials \n  // to prove to Deezer that we're a valid app-- if everything works,\n  // we'll get an `access_token` we can use to represent the user\n  // for a period of time (or \"forever\" if we have the offline_access permission)\n  deezer.createSession(appId, appSecret, code, function (err, result) {\n\t\t\n    // If an error occurs, we should handle it\n    // (again, see express example for more)\n  \n    // Otherwise, everything is cool and we have the access token and lifespan (`expires`)\n    // in `result.accessToken` and `result.expires`\n    console.log(result);\n    \n    // Now we can do API requests!\n    \n    // e.g. search for artists with names containing the phrase 'empire'\n    deezer.request(result.accessToken,\n    {\n      resource: 'search/artist',\n      method: 'get',\n      fields: { q: 'empire' }\n    },\n    function done (err, results) {\n      if (err) throw err;\n      console.log(results);\n    });\n    \n  });\n}\n\n```\n\n\n\n## Methods\n\n#### getLoginUrl\n\n```javascript\n\t/**\n\t * Get the authentication url where your user should be redirected\n\t *\n\t * @param {String} appId\t\t\t(your Deezer application id from the Deezer developer portal)\n\t * @param {String} redirectUrl\t\t(URL which will handle the user's code from Deezer)\n\t * @param {Array|undefined} perms\t(requested permissions [optional])\n\t *\n\t * NOTE: `redirectUrl` must be within the 'Application domain' specified for this app \n\t * in your Deezer developer portal at: http://developers.deezer.com/myapps\n\t */\n\tdeezer.getLoginUrl(appId, redirectUrl, [permissions]);\n```\n\n\n#### createSession\n\n```javascript\n\t/**\n\t * Generate an access token to access a user's Deezer account\n\t *\n\t * > NOTE: You must first have a valid `code` from the user proving that they're OK with this!!\n\t * > You can get a code by redirecting the user to the url generated by calling `DZ.getLoginUrl(appId, callbackUrl)`\n\t * > You'll probably want to call `DZ.createSession()` from the handler for the `callbackUrl` you specified\n\t * > in `getLoginUrl(appId, callbackUrl)`, since that's where you'll have access to the `code`\n\t *\n\t * @param {String} appId\t\t(your Deezer application id from the Deezer developer portal)\n\t * @param {String} code\t\t\t(the OAuth `code` generated by Deezer and sent to the `callbackUrl`)\n\t * @param {String} secret\t\t(your Deezer app's secret from the developer portal)\n\t * @param {Function} cb\n\t *\t\t@param {Error|null} err\n\t */\n\tdeezer.createSession(appId, appSecret, code, cb);\n```\n\n#### request\n\n```javascript\n\t/**\n\t * Send an arbitrary API request to Deezer\n\t *\n\t * @param {String} accessToken\t\t\t(the OAuth token representing a user's session)\n\t * @param {Object} options\n\t *\t\tresource {String}\t\t\t\t(the string name of resource, e.g. 'album')\n\t *\t\tmethod {HTTPMethod|undefined}\t(the REST method [defaults to 'get'])\n\t * @param {Function} cb\n\t *\t\t@param {Error|null} err\n\t */\n\tdeezer.request(accessToken, options, cb);\n```\n\n## To run the Express example\n\n(1) Create your app on developers.deezer.com\n  + Set application domain to `localhost` for now, and make sure and copy down your `Application ID` and `Secret Key`\n\n(2) Copy `deezerCredentials.ex.js` to `deezerCredentials.js`\n\n(3) Then change the app secret and app id in `deezerCredentials.js` to your app's credentials from developers.deezer.com\n\n(4) `npm install`\n\n(5) `node app.js`\n\n\n\n\n## To run tests\n`npm test`\n\n\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mike McNeil\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nhttps://github.com/mikermcneil/node-deezer/blob/master/LICENSE\n\n\n\n\n<!--\n## How To Build a Deezer App\n\n+ Create your app on developers.deezer.com\n\t+ Set application domain to `localhost` for now\n\t+ Grab the `Application ID` and `Secret Key`\n\n+ 2) Build your Deezer login flow\n\t+ You must pop up an OAuth window (or redirect, or use an iframe) to acquire an access token for the user whose account your app will access\n\t+ The `callback url` you specify on developers.deezer.com will be accessed from Deezer's end when the login is complete.\n\n```\n// OAuth endpoint:\nhttps://connect.deezer.com/oauth/auth.php?app_id=YOUR_APP_ID&redirect_uri=YOUR_REDIRECT_URI&perms=basic_access,email\n```\n-->\n",
  "bugs": {
    "url": "https://github.com/mikermcneil/node-deezer/issues"
  },
  "homepage": "https://github.com/mikermcneil/node-deezer",
  "_id": "node-deezer@0.3.3",
  "_from": "node-deezer@"
}
